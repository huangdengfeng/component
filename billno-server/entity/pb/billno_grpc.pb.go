// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v4.25.3
// source: billno.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	Billno_GetBillno_FullMethodName = "/com.seezoon.billno.Billno/GetBillno"
)

// BillnoClient is the client API for Billno service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BillnoClient interface {
	// 获取单号
	GetBillno(ctx context.Context, in *GetBillnoReq, opts ...grpc.CallOption) (*GetBillnoResp, error)
}

type billnoClient struct {
	cc grpc.ClientConnInterface
}

func NewBillnoClient(cc grpc.ClientConnInterface) BillnoClient {
	return &billnoClient{cc}
}

func (c *billnoClient) GetBillno(ctx context.Context, in *GetBillnoReq, opts ...grpc.CallOption) (*GetBillnoResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBillnoResp)
	err := c.cc.Invoke(ctx, Billno_GetBillno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillnoServer is the server API for Billno service.
// All implementations must embed UnimplementedBillnoServer
// for forward compatibility
type BillnoServer interface {
	// 获取单号
	GetBillno(context.Context, *GetBillnoReq) (*GetBillnoResp, error)
	mustEmbedUnimplementedBillnoServer()
}

// UnimplementedBillnoServer must be embedded to have forward compatible implementations.
type UnimplementedBillnoServer struct {
}

func (UnimplementedBillnoServer) GetBillno(context.Context, *GetBillnoReq) (*GetBillnoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBillno not implemented")
}
func (UnimplementedBillnoServer) mustEmbedUnimplementedBillnoServer() {}

// UnsafeBillnoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BillnoServer will
// result in compilation errors.
type UnsafeBillnoServer interface {
	mustEmbedUnimplementedBillnoServer()
}

func RegisterBillnoServer(s grpc.ServiceRegistrar, srv BillnoServer) {
	s.RegisterService(&Billno_ServiceDesc, srv)
}

func _Billno_GetBillno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillnoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillnoServer).GetBillno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Billno_GetBillno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillnoServer).GetBillno(ctx, req.(*GetBillnoReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Billno_ServiceDesc is the grpc.ServiceDesc for Billno service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Billno_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "com.seezoon.billno.Billno",
	HandlerType: (*BillnoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBillno",
			Handler:    _Billno_GetBillno_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "billno.proto",
}
